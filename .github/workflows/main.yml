name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      wmr: ${{ steps.filter.outputs.wmr }}
      preact-iso: ${{ steps.filter.outputs.preact-iso }}
    steps:
      - uses: actions/checkout@v2
      - uses: dorny/paths-filter@v2
        id: filter
        with:
          filters: |
            wmr:
              - 'packages/wmr/**'
              - 'examples/demo/**'
            preact-iso:
              - 'packages/preact-iso/**'

  build:
    needs: changes
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # Change the condition for ESM Dist Test below when changing this.
        node-version: [12.18, 14.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install
        if: ${{ needs.changes.outputs.wmr == 'true' || needs.changes.outputs.preact-iso == 'true' }}
        run: yarn --frozen-lockfile
      - name: Build
        if: ${{ needs.changes.outputs.wmr == 'true' }}
        run: yarn workspace wmr build
      - name: Test wmr
        if: ${{ needs.changes.outputs.wmr == 'true' }}
        run: yarn workspace wmr test
      - name: Test wmr (production build)
        if: ${{ needs.changes.outputs.wmr == 'true' }}
        run: yarn workspace wmr test-prod
      - name: Test preact-iso
        if: ${{ needs.changes.outputs.preact-iso == 'true' }}
        run: yarn workspace preact-iso test

  lhci:
    needs: changes
    if: ${{ needs.changes.outputs.wmr == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Use Node.js 14.x
        uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: Prepare LHCI
        run: npm install -g @lhci/cli@0.4.x
      - name: Install
        run: yarn --frozen-lockfile
      - name: Build
        run: yarn ci
      - name: LHCI
        run: lhci autorun --upload.target=temporary-public-storage --collect.url="http://localhost:8080" --collect.startServerCommand="yarn workspace @examples/demo serve" --collect.startServerReadyPattern="server running at" --upload.githubAppToken=${{ secrets.LHCI_GITHUB_APP_TOKEN }}
